{"version":3,"sources":["ui/templates/generic.tsx","pages/home/model.ts","pages/home/index.tsx","pages/routes.ts","pages/error404/index.tsx","pages/index.ts","application.tsx","index.tsx"],"names":["GenericTemplate","children","className","href","startClicked","createEvent","restartClicked","toMainMenuClicked","tubeClicked","tubeSelected","map","event","Number","parseInt","currentTarget","dataset","position","gameFinishedSuccessfully","$state","createStore","$moves","$tubes","$currentSelectedTubeIndex","$field","combine","tubes","selectedIndex","tube","index","isCurrent","over","head","balls","slice","complete","isComplete","$filledTubesCount","filter","length","firstBall","every","ball","generateTubesFx","createEffect","on","sample","clock","fn","colorsCount","target","use","tubesCount","colors","getCountOfTubes","availableBalls","shuffle","Array","from","_","filledTubes","pop","emptyTubes","doneData","reset","tubeWillChange","source","currentIndex","ballUplift","guard","ballDownliftBack","ballMoved","sourceTube","targetTube","sourceBall","targetBall","undefined","count","filled","StartScreen","Content","Title","Button","onClick","text","$isWon","state","InPlay","isWon","useStore","useList","Moves","Container","Tube","TubeHolder","data-position","TubeTop","Ball","TubeGlass","data-complete","color","key","0","1","2","3","4","5","6","7","8","9","10","11","WonScreen","moves","Won","styled","div","h2","button","attrs","selected","type","style","data-number","ROUTES","path","exact","component","Pages","renderRoutes","Application","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.0455823d.chunk.js","sourcesContent":["import * as React from 'react';\nimport './generic.css';\n\nexport const GenericTemplate: React.FC = ({ children }) => (\n  <>\n    <main>{children}</main>\n    <nav className=\"navigation\">\n      <a href=\"https://effector.dev\">Effector</a>\n      <a href=\"https://github.com/sergeysova/ballsort\">Source Code</a>\n    </nav>\n  </>\n);\n","/* eslint-disable @typescript-eslint/no-non-null-assertion, no-shadow */\nimport { MouseEvent } from 'react';\nimport {\n  combine,\n  createEffect,\n  createEvent,\n  createStore,\n  guard,\n  sample,\n} from 'effector';\nimport shuffle from 'lodash/shuffle';\nimport head from 'lodash/head';\n\nexport interface Tube {\n  balls: BallColor[];\n}\n\nexport type BallColor = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11;\n\nconst COLORS_IN_GAME = 4;\nconst BALLS_IN_TUBE = 4;\nconst getCountOfTubes = (colors: number) => colors + 2; // magic\n\nexport const startClicked = createEvent<MouseEvent<HTMLButtonElement>>();\nexport const restartClicked = createEvent<MouseEvent<HTMLButtonElement>>();\nexport const toMainMenuClicked = createEvent<MouseEvent<HTMLButtonElement>>();\nexport const tubeClicked = createEvent<MouseEvent<HTMLDivElement>>();\n\nconst tubeSelected = tubeClicked.map((event) =>\n  Number.parseInt(event.currentTarget.dataset.position ?? '', 10),\n);\nconst gameFinishedSuccessfully = createEvent();\n\nexport const $state = createStore<'start' | 'ingame' | 'won'>('start');\nexport const $moves = createStore(0);\n\nconst $tubes = createStore<Tube[]>([]);\nconst $currentSelectedTubeIndex = createStore<number | null>(null);\n\nexport const $field = combine(\n  $tubes,\n  $currentSelectedTubeIndex,\n  (tubes, selectedIndex) => {\n    return tubes.map((tube, index) => {\n      const isCurrent = selectedIndex === index;\n      const over = isCurrent ? head(tube.balls)! : null;\n      const leftBalls = isCurrent ? tube.balls.slice(1) : tube.balls;\n      return { balls: leftBalls, over, complete: isComplete(tube) };\n    });\n  },\n);\n\nconst $filledTubesCount = $field.map(\n  (tubes) => tubes.filter(({ complete }) => complete).length,\n);\n\nfunction isComplete(tube: Tube): boolean {\n  if (tube.balls.length === BALLS_IN_TUBE) {\n    const firstBall = head(tube.balls)!;\n    return tube.balls.every((ball) => ball === firstBall);\n  }\n  return false;\n}\n\nconst generateTubesFx = createEffect<{ colorsCount: number }, Tube[]>();\n\n$state.on(startClicked, () => 'ingame');\n\nsample({\n  clock: [startClicked, restartClicked],\n  fn: () => ({ colorsCount: COLORS_IN_GAME }),\n  target: generateTubesFx,\n});\n\ngenerateTubesFx.use(({ colorsCount }) => {\n  const tubesCount = getCountOfTubes(colorsCount);\n  const availableBalls = shuffle(\n    Array.from(\n      { length: BALLS_IN_TUBE * colorsCount },\n      (_, index) => (index % BALLS_IN_TUBE) as BallColor,\n    ),\n  );\n\n  const filledTubes = Array.from({ length: colorsCount }).map(() => ({\n    balls: Array.from({ length: BALLS_IN_TUBE }).map(\n      () => availableBalls.pop()!,\n    ),\n  }));\n\n  const emptyTubes = Array.from({ length: tubesCount - colorsCount }, () => ({\n    balls: [],\n  }));\n\n  return [...filledTubes, ...emptyTubes];\n});\n\n$tubes.on(generateTubesFx.doneData, (_, tubes) => tubes);\n$moves.reset(generateTubesFx);\n\nconst tubeWillChange = sample({\n  clock: tubeSelected,\n  source: [$tubes, $currentSelectedTubeIndex],\n  fn: ([tubes, currentIndex], selectedIndex) => ({\n    tubes,\n    currentIndex,\n    selectedIndex,\n  }),\n});\n\nconst ballUplift = guard({\n  source: tubeWillChange,\n  filter({ tubes, currentIndex, selectedIndex }) {\n    return currentIndex === null && tubes[selectedIndex].balls.length !== 0;\n  },\n});\n\n$currentSelectedTubeIndex.on(\n  ballUplift,\n  (_, { selectedIndex }) => selectedIndex,\n);\n\nconst ballDownliftBack = guard({\n  source: tubeWillChange,\n  filter({ currentIndex, selectedIndex }) {\n    return currentIndex === selectedIndex;\n  },\n});\n\n$currentSelectedTubeIndex.on(ballDownliftBack, () => null);\n\nconst ballMoved = guard({\n  source: tubeWillChange,\n  filter({ tubes, currentIndex, selectedIndex }) {\n    if (currentIndex === null) return false;\n    if (currentIndex === selectedIndex) return false;\n\n    // we proofed that source tube is not empty\n    // ballUplift triggered only when tube is not empty\n    const sourceTube = tubes[currentIndex];\n    const targetTube = tubes[selectedIndex];\n\n    const sourceBall = head(sourceTube.balls);\n    const targetBall = head(targetTube.balls);\n\n    const isTargetTubeEmpty = targetBall === undefined;\n    return isTargetTubeEmpty ? true : targetBall === sourceBall;\n  },\n});\n\n$tubes.on(ballMoved, (_, { tubes, currentIndex, selectedIndex }) => {\n  const sourceBall = head(tubes[currentIndex!].balls)!;\n\n  return tubes.map((tube, index) => {\n    if (index === currentIndex) return { balls: tube.balls.slice(1) };\n    if (index === selectedIndex) return { balls: [sourceBall, ...tube.balls] };\n    return tube;\n  });\n});\n$currentSelectedTubeIndex.on(ballMoved, () => null);\n$moves.on(ballMoved, (count) => count + 1);\n\nguard({\n  source: $filledTubesCount,\n  filter: (filled) => filled === COLORS_IN_GAME,\n  target: gameFinishedSuccessfully,\n});\n\n$state.on(gameFinishedSuccessfully, () => 'won');\n\n$currentSelectedTubeIndex.reset(restartClicked);\n$moves.reset(restartClicked);\n\n$state.on(toMainMenuClicked, () => 'start');\n","/* eslint-disable react/no-array-index-key */\nimport * as React from 'react';\nimport { useList, useStore } from 'effector-react';\nimport styled from 'styled-components';\nimport {\n  $field,\n  $moves,\n  $state,\n  BallColor,\n  restartClicked,\n  startClicked,\n  toMainMenuClicked,\n  tubeClicked,\n} from './model';\n\nexport const HomePage: React.FC = () => {\n  const state = useStore($state);\n\n  if (state === 'start') {\n    return <StartScreen />;\n  }\n\n  return <InPlay />;\n};\n\nconst StartScreen: React.FC = () => {\n  return (\n    <Content>\n      <Title>\n        <span>BALL</span>SORT\n      </Title>\n      <Button onClick={startClicked} text=\"Start game\" />\n    </Content>\n  );\n};\n\nconst $isWon = $state.map((state) => state === 'won');\n\nexport const InPlay: React.FC = () => {\n  const isWon = useStore($isWon);\n  const tubes = useList($field, ({ balls, over, complete }, index) => (\n    <Tube\n      tube={{ balls, over, complete }}\n      position={index}\n      onClick={tubeClicked}\n    />\n  ));\n\n  return (\n    <>\n      <div>\n        <Button onClick={toMainMenuClicked} text=\"←\" />\n        <Button onClick={restartClicked} text=\"Restart\" />\n        <Moves />\n      </div>\n      <Container>{tubes}</Container>\n      {isWon && <WonScreen />}\n    </>\n  );\n};\n\ntype TubeProps = {\n  tube: {\n    balls: Array<BallColor>;\n    over: BallColor | null;\n    complete: boolean;\n  };\n  position: number;\n  onClick: React.EventHandler<React.MouseEvent<HTMLDivElement>>;\n};\n\nconst Tube: React.FC<TubeProps> = ({ tube, position, onClick }) => (\n  <TubeHolder onClick={onClick} data-position={position}>\n    <TubeTop>{tube.over !== null ? <Ball ball={tube.over} /> : null}</TubeTop>\n    <TubeGlass data-complete={tube.complete}>\n      {tube.balls.map((color, index) => (\n        <Ball key={index} ball={color} />\n      ))}\n    </TubeGlass>\n  </TubeHolder>\n);\n\nconst colors: Record<BallColor, [string, string]> = {\n  0: ['#8F7E22', '#FFE600'],\n  1: ['#247516', '#70FF00'],\n  2: ['#466799', '#00B2FF'],\n  3: ['#29777C', '#00FFF0'],\n  4: ['#17206F', '#4A72FF'],\n  5: ['#BABABA', '#FFFFFF'],\n  6: ['#4C3283', '#9D50FF'],\n  7: ['#8B11C5', '#FF00F5'],\n  8: ['#9D0D41', '#FF60B5'],\n  9: ['#4B0000', '#FF0000'],\n  10: ['#79480F', '#FF7A00'],\n  11: ['#343434', '#B1B1B1'],\n};\n\nconst BallComponent: React.FC<{ ball: BallColor; className?: string }> = ({\n  className,\n  children,\n  ball,\n}) => (\n  <div\n    className={className}\n    style={\n      {\n        '--main-color': colors[ball][0],\n        '--light-color': colors[ball][1],\n      } as React.CSSProperties\n    }\n    data-number={ball}\n  >\n    {children}\n  </div>\n);\n\nconst WonScreen = () => {\n  const moves = useStore($moves);\n\n  return (\n    <Won>\n      <h1>You won!</h1>\n      <h2>In {moves} moves</h2>\n      <Button onClick={toMainMenuClicked} text=\"New game\" />\n    </Won>\n  );\n};\n\nconst MovesContent: React.FC<{ className?: string }> = ({ className }) => {\n  const count = useStore($moves);\n\n  return <span className={className}>Moves: {count}</span>;\n};\n\nconst Content = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h2`\n  font-size: 3rem;\n  font-weight: 300;\n\n  & span {\n    text-decoration: underline;\n  }\n`;\n\ninterface Button {\n  selected?: boolean;\n  text: React.ReactNode;\n}\n\nconst buttonMap = ({ selected, text }: Button) => ({\n  'data-selected': selected ?? false,\n  type: 'button',\n  children: text,\n});\n\nconst Button = styled.button.attrs(buttonMap)`\n  background-color: white;\n  color: black;\n  padding: 0.6rem 1rem;\n  font-size: 1.3rem;\n  margin: 0 0.2rem;\n  border: 2px solid lightgray;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    background-color: #f1f1f1;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 4px lightblue;\n    border-color: lightblue;\n  }\n\n  &[data-selected='true'] {\n    border-color: gray;\n    background-color: gray;\n    color: white;\n  }\n`;\n\nconst Moves = styled(MovesContent)`\n  padding: 0.6rem 0.4rem;\n  font-size: 1.3rem;\n  margin: 0;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: 38rem;\n`;\n\nconst Won = styled.div`\n  display: flex;\n  flex-flow: column;\n  position: fixed;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(6px);\n  align-items: center;\n  padding-top: 5rem;\n\n  h1,\n  h2,\n  h3 {\n    color: black;\n    text-shadow: 0 0 2px white;\n  }\n\n  & > * + * {\n    margin-top: 1rem;\n  }\n`;\n\nconst TubeHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n`;\n\nconst TubeTop = styled.div`\n  display: flex;\n  height: 3rem;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 4px solid lightgray;\n`;\n\nconst TubeGlass = styled.div<{ 'data-complete': boolean }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  flex-shrink: 0;\n  align-items: center;\n  border: 2px solid lightgray;\n  border-top: none;\n  width: 3rem;\n  height: 10rem;\n  padding-bottom: 0.4rem;\n  padding-top: 0.4rem;\n  border-bottom-left-radius: 2.4rem;\n  border-bottom-right-radius: 2.4rem;\n\n  &[data-complete='true'] {\n    background-color: lightgray;\n  }\n`;\n\nconst Ball = styled(BallComponent)`\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  border: 2px solid black;\n  margin: 1px;\n  flex-shrink: 0;\n  background: radial-gradient(\n    circle at 65% 15%,\n    white 1px,\n    var(--light-color) 3%,\n    var(--main-color) 60%,\n    var(--light-color) 100%\n  );\n  position: relative;\n\n  &::after {\n    content: '' attr(data-number) '';\n    position: absolute;\n    top: 6px;\n    left: 10px;\n    color: white;\n    text-shadow: 0 0 1px black;\n    display: none;\n  }\n`;\n","import { HomePage } from './home';\nimport { Error404Page } from './error404';\n\nexport const ROUTES = [\n  { path: '/', exact: true, component: HomePage },\n  { path: '*', component: Error404Page },\n];\n","import * as React from 'react';\n\nexport const Error404Page: React.FC = () => <div>Here not found</div>;\n","import * as React from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport { ROUTES } from './routes';\n\nexport const Pages: React.FC = () => renderRoutes(ROUTES);\n","import * as React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { GenericTemplate } from './ui';\nimport { Pages } from './pages';\n\nexport const Application: React.FC = () => (\n  <BrowserRouter>\n    <GenericTemplate>\n      <Pages />\n    </GenericTemplate>\n  </BrowserRouter>\n);\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { Application } from './application';\n\nReactDOM.render(<Application />, document.querySelector('#root'));\n"],"sourceRoot":""}