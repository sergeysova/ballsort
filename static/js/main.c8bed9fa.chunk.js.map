{"version":3,"sources":["ui/templates/generic.tsx","pages/home/model.ts","pages/home/index.tsx","pages/routes.ts","pages/error404/index.tsx","pages/index.ts","application.tsx","index.tsx"],"names":["GenericTemplate","children","className","href","startClicked","createEvent","restartClicked","toMainMenuClicked","tubeClicked","$state","createStore","$moves","StartScreen","Content","Title","Button","onClick","text","$isWon","map","state","InPlay","isWon","useStore","Moves","Container","tube","balls","over","complete","position","Tube","TubeHolder","data-position","TubeTop","Ball","ball","TubeGlass","data-complete","color","index","key","colors","0","WonScreen","moves","Won","styled","div","h2","button","attrs","selected","type","count","style","data-number","ROUTES","path","exact","component","Pages","renderRoutes","Application","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.c8bed9fa.chunk.js","sourcesContent":["import * as React from 'react';\nimport './generic.css';\n\nexport const GenericTemplate: React.FC = ({ children }) => (\n  <>\n    <main>{children}</main>\n    <nav className=\"navigation\">\n      <a href=\"https://effector.dev\">Effector</a>\n      <a href=\"https://github.com/sergeysova/ballsort\">Source Code</a>\n    </nav>\n  </>\n);\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { MouseEvent } from 'react';\nimport { createEvent, createStore } from 'effector';\n\nexport interface Tube {\n  balls: BallColor[];\n}\n\nconst NO_SELECTED = -1;\nconst BALLS_IN_TUBE = 4;\n\nexport type BallColor =\n  | 0x0\n  | 0x1\n  | 0x2\n  | 0x3\n  | 0x4\n  | 0x5\n  | 0x6\n  | 0x7\n  | 0x8\n  | 0x9\n  | 0xa\n  | 0xb;\n\nexport const startClicked = createEvent<MouseEvent<HTMLButtonElement>>();\nexport const restartClicked = createEvent<MouseEvent<HTMLButtonElement>>();\nexport const toMainMenuClicked = createEvent<MouseEvent<HTMLButtonElement>>();\nexport const tubeClicked = createEvent<MouseEvent<HTMLDivElement>>();\n\nexport const $state = createStore<'start' | 'ingame' | 'won'>('won');\nexport const $moves = createStore(0);\n","/* eslint-disable react/no-array-index-key */\nimport * as React from 'react';\nimport { useStore } from 'effector-react';\nimport styled from 'styled-components';\nimport {\n  $moves,\n  $state,\n  BallColor,\n  restartClicked,\n  startClicked,\n  toMainMenuClicked,\n  tubeClicked,\n} from './model';\n\nexport const HomePage: React.FC = () => {\n  const state = useStore($state);\n\n  if (state === 'start') {\n    return <StartScreen />;\n  }\n\n  return <InPlay />;\n};\n\nconst StartScreen: React.FC = () => {\n  return (\n    <Content>\n      <Title>\n        <span>BALL</span>SORT\n      </Title>\n      <Button onClick={startClicked} text=\"Start game\" />\n    </Content>\n  );\n};\n\nconst $isWon = $state.map((state) => state === 'won');\n\nexport const InPlay: React.FC = () => {\n  const isWon = useStore($isWon);\n\n  return (\n    <>\n      <div>\n        <Button onClick={toMainMenuClicked} text=\"←\" />\n        <Button onClick={restartClicked} text=\"Restart\" />\n        <Moves />\n      </div>\n      <Container>\n        {/* Tubes */}\n        <Tube\n          tube={{ balls: [0, 1, 2], over: null, complete: false }}\n          position={0}\n          onClick={tubeClicked}\n        />\n        <Tube\n          tube={{ balls: [3, 4, 5], over: null, complete: false }}\n          position={1}\n          onClick={tubeClicked}\n        />\n        <Tube\n          tube={{ balls: [6, 7, 8], over: null, complete: false }}\n          position={2}\n          onClick={tubeClicked}\n        />\n      </Container>\n      {isWon && <WonScreen />}\n    </>\n  );\n};\n\ntype TubeProps = {\n  tube: {\n    balls: Array<BallColor>;\n    over: BallColor | null;\n    complete: boolean;\n  };\n  position: number;\n  onClick: React.EventHandler<React.MouseEvent<HTMLDivElement>>;\n};\n\nconst Tube: React.FC<TubeProps> = ({ tube, position, onClick }) => (\n  <TubeHolder onClick={onClick} data-position={position}>\n    <TubeTop>{tube.over !== null ? <Ball ball={tube.over} /> : null}</TubeTop>\n    <TubeGlass data-complete={tube.complete}>\n      {tube.balls.map((color, index) => (\n        <Ball key={index} ball={color} />\n      ))}\n    </TubeGlass>\n  </TubeHolder>\n);\n\nconst colors: Record<BallColor, [string, string]> = {\n  0x0: ['#8F7E22', '#FFE600'],\n  0x1: ['#247516', '#70FF00'],\n  0x2: ['#466799', '#00B2FF'],\n  0x3: ['#29777C', '#00FFF0'],\n  0x4: ['#17206F', '#4A72FF'],\n  0x5: ['#BABABA', '#FFFFFF'],\n  0x6: ['#4C3283', '#9D50FF'],\n  0x7: ['#8B11C5', '#FF00F5'],\n  0x8: ['#9D0D41', '#FF60B5'],\n  0x9: ['#4B0000', '#FF0000'],\n  0xa: ['#79480F', '#FF7A00'],\n  0xb: ['#343434', '#B1B1B1'],\n};\n\nconst BallComponent: React.FC<{ ball: BallColor; className?: string }> = ({\n  className,\n  children,\n  ball,\n}) => (\n  <div\n    className={className}\n    style={\n      {\n        '--main-color': colors[ball][0],\n        '--light-color': colors[ball][1],\n      } as React.CSSProperties\n    }\n    data-number={ball}\n  >\n    {children}\n  </div>\n);\n\nconst WonScreen = () => {\n  const moves = useStore($moves);\n\n  return (\n    <Won>\n      <h1>You won!</h1>\n      <h2>In {moves} moves</h2>\n      <Button onClick={toMainMenuClicked} text=\"New game\" />\n    </Won>\n  );\n};\n\nconst MovesContent: React.FC<{ className?: string }> = ({ className }) => {\n  const count = useStore($moves);\n\n  return <span className={className}>Moves: {count}</span>;\n};\n\nconst Content = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h2`\n  font-size: 3rem;\n  font-weight: 300;\n\n  & span {\n    text-decoration: underline;\n  }\n`;\n\ninterface Button {\n  selected?: boolean;\n  text: React.ReactNode;\n}\n\nconst buttonMap = ({ selected, text }: Button) => ({\n  'data-selected': selected ?? false,\n  type: 'button',\n  children: text,\n});\n\nconst Button = styled.button.attrs(buttonMap)`\n  background-color: white;\n  color: black;\n  padding: 0.6rem 1rem;\n  font-size: 1.3rem;\n  margin: 0 0.2rem;\n  border: 2px solid lightgray;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    background-color: #f1f1f1;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 4px lightblue;\n    border-color: lightblue;\n  }\n\n  &[data-selected='true'] {\n    border-color: gray;\n    background-color: gray;\n    color: white;\n  }\n`;\n\nconst Moves = styled(MovesContent)`\n  padding: 0.6rem 0.4rem;\n  font-size: 1.3rem;\n  margin: 0;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: 38rem;\n`;\n\nconst Won = styled.div`\n  display: flex;\n  flex-flow: column;\n  position: fixed;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(6px);\n  align-items: center;\n  padding-top: 5rem;\n\n  h1,\n  h2,\n  h3 {\n    color: black;\n    text-shadow: 0 0 2px white;\n  }\n\n  & > * + * {\n    margin-top: 1rem;\n  }\n`;\n\nconst TubeHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n`;\n\nconst TubeTop = styled.div`\n  display: flex;\n  height: 3rem;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 4px solid lightgray;\n`;\n\nconst TubeGlass = styled.div<{ 'data-complete': boolean }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  flex-shrink: 0;\n  align-items: center;\n  border: 2px solid lightgray;\n  border-top: none;\n  width: 3rem;\n  height: 10rem;\n  padding-bottom: 0.4rem;\n  padding-top: 0.4rem;\n  border-bottom-left-radius: 2.4rem;\n  border-bottom-right-radius: 2.4rem;\n\n  &[data-complete='true'] {\n    background-color: lightgray;\n  }\n`;\n\nconst Ball = styled(BallComponent)`\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  border: 2px solid black;\n  margin: 1px;\n  flex-shrink: 0;\n  background: radial-gradient(\n    circle at 65% 15%,\n    white 1px,\n    var(--light-color) 3%,\n    var(--main-color) 60%,\n    var(--light-color) 100%\n  );\n  position: relative;\n\n  &::after {\n    content: '' attr(data-number) '';\n    position: absolute;\n    top: 6px;\n    left: 10px;\n    color: white;\n    text-shadow: 0 0 1px black;\n    display: none;\n  }\n`;\n","import { HomePage } from './home';\nimport { Error404Page } from './error404';\n\nexport const ROUTES = [\n  { path: '/', exact: true, component: HomePage },\n  { path: '*', component: Error404Page },\n];\n","import * as React from 'react';\n\nexport const Error404Page: React.FC = () => <div>Here not found</div>;\n","import * as React from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport { ROUTES } from './routes';\n\nexport const Pages: React.FC = () => renderRoutes(ROUTES);\n","import * as React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { GenericTemplate } from './ui';\nimport { Pages } from './pages';\n\nexport const Application: React.FC = () => (\n  <BrowserRouter>\n    <GenericTemplate>\n      <Pages />\n    </GenericTemplate>\n  </BrowserRouter>\n);\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { Application } from './application';\n\nReactDOM.render(<Application />, document.querySelector('#root'));\n"],"sourceRoot":""}